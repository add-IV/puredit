[
  {
    "type": "packageExtension",
    "package": "py-pytorch",
    "rootProjections": [
      {
        "type": "rootProjection",
        "name": "Tensor Max",
        "description": "Get the maximum value of a tensor",
        "isExpression": true,
        "template": "<%torch%>.max(<%tensor%>)",
        "segmentWidgets": ["Get the maximum value in tensor <%tensor%>"],
        "parameters": [
          {
            "type": "contextVariable",
            "name": "torch"
          },
          {
            "type": "argument",
            "name": "tensor",
            "nodeTypes": ["identifier"]
          }
        ]
      },
      {
        "type": "rootProjection",
        "name": "Concatenate Tensors",
        "description": "Concatenate tensors along an axis.",
        "isExpression": true,
        "template": "<%torch%>.cat(<%tensors%>, <%dimension%>)",
        "segmentWidgets": ["Concatenate tensors", "along dimension <%dimension%>"],
        "parameters": [
          {
            "type": "contextVariable",
            "name": "torch"
          },
          {
            "type": "argument",
            "name": "dimension",
            "nodeTypes": ["integer"]
          },
          {
            "type": "aggregation",
            "name": "tensors",
            "nodeType": "tuple",
            "partSubProjections": [
              {
                "type": "aggregationPart",
                "name": "Tensor",
                "description": "A tensor.",
                "template": "<%tensor%>",
                "segmentWidgets": ["<%tensor%>"],
                "parameters": [
                  {
                    "type": "argument",
                    "name": "tensor",
                    "nodeTypes": ["identifier"]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "rootProjectionExtension",
    "package": "py-pytorch",
    "rootProjection": "Slice",
    "parentParameter": "slices",
    "subProjections": [
      {
        "type": "aggregationPart",
        "name": "All with Stride",
        "description": "Select all items with a spcified stride.",
        "template": "::<%stride%>",
        "segmentWidgets": ["Over all indices with stride <%stride%>"],
        "parameters": [
          {
            "type": "argument",
            "name": "stride",
            "nodeTypes": ["integer", "identifier"]
          }
        ]
      }
    ]
  }
]
